// <auto-generated />
using MVCMockDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCMockDemo.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20230823061419_SeedingDatabase")]
    partial class SeedingDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVCMockDemo.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Action",
                            Description = "Tune in to Action peak movies"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Drama",
                            Description = "Tune in to Action peak movies"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Thriller",
                            Description = "Tune in to Action peak movies"
                        });
                });

            modelBuilder.Entity("MVCMockDemo.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMovieOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cast = "Robert",
                            CategoryId = 2,
                            IsMovieOfTheWeek = true,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "Avengers"
                        },
                        new
                        {
                            Id = 2,
                            Cast = "Robert",
                            CategoryId = 2,
                            IsMovieOfTheWeek = true,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "12 Angry Men"
                        },
                        new
                        {
                            Id = 3,
                            Cast = "Robert",
                            CategoryId = 1,
                            IsMovieOfTheWeek = false,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Cast = "Robert",
                            CategoryId = 2,
                            IsMovieOfTheWeek = true,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "Fight Club"
                        },
                        new
                        {
                            Id = 5,
                            Cast = "Robert",
                            CategoryId = 2,
                            IsMovieOfTheWeek = true,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "Avengers"
                        },
                        new
                        {
                            Id = 6,
                            Cast = "Robert",
                            CategoryId = 1,
                            IsMovieOfTheWeek = true,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "Avengers"
                        },
                        new
                        {
                            Id = 7,
                            Cast = "Robert",
                            CategoryId = 2,
                            IsMovieOfTheWeek = false,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "The Godfather"
                        },
                        new
                        {
                            Id = 8,
                            Cast = "Leo",
                            CategoryId = 3,
                            IsMovieOfTheWeek = true,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 9,
                            Cast = "Miles",
                            CategoryId = 2,
                            IsMovieOfTheWeek = true,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "Spiderverse"
                        },
                        new
                        {
                            Id = 10,
                            Cast = "Chris",
                            CategoryId = 3,
                            IsMovieOfTheWeek = true,
                            Price = 599m,
                            Rating = 4.8f,
                            Title = "Endgame"
                        });
                });

            modelBuilder.Entity("MVCMockDemo.Models.Movie", b =>
                {
                    b.HasOne("MVCMockDemo.Models.Category", "Category")
                        .WithMany("Movies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MVCMockDemo.Models.Category", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
